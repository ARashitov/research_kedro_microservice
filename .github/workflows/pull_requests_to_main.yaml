name: "Continuous integration testing"

on:
  pull_request:
    branches: [ main ]

jobs:


  linting:

    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python 3.10.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.5

    - name: Building test environment
      run: bash -c "make env_install_dependencies"

    - name: Execution of pre-commit hooks over all files
      run: bash -c "pre-commit run --all-files"


  testing:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, macos-12, ubuntu-20.04, ubuntu-22.04]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python 3.10.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.5

    - name: Building test environment
      run: bash -c "make env_install_dependencies"

    - name: Autotesting
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ENVIRONMENT: test
        google_maps_key:  ${{ secrets.GOOGLE_MAPS_KEY }}
      run: bash -c "make run_update_kedro_context && make run_test"


  build:

    runs-on: ubuntu-22.04
    # needs: [linting, testing]
    steps:

      - name: Image tag extraction from timestamp
        uses: josStorer/get-current-time@v2
        id: build-tag
        with:
          format: YYYY-MM-DD--HH-mm-ss
          utcOffset: "+00:00"

      - name: Image tag show
        env:
          build_tag: ${{ steps.build-tag.outputs.formattedTime }}
        run: echo $build_tag

      - name: Software build and publish to AWS ECR
        uses: ./.github/workflows/modules/build.yaml
        with:
          build_tag: ${{ steps.build-tag.outputs.formattedTime }}
        secrets:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    outputs:
      build_tag: ${{ steps.build-tag.outputs.formattedTime }}
